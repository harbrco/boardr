@function decimal-round ($number, $digits: 0, $mode: round) {
	$n: 1;
	// $number must be a number
	@if type-of($number) != number {
		@warn '#{ $number } is not a number.';
		@return $number;
	}
	// $digits must be a unitless number
	@if type-of($digits) != number {
		@warn '#{ $digits } is not a number.';
		@return $number;
	} @else if not unitless($digits) {
		@warn '#{ $digits } has a unit.';
		@return $number;
	}
	@for $i from 1 through $digits {
		$n: $n * 10;
	}
	@if $mode == round {
		@return round($number * $n) / $n;
	} @else if $mode == ceil {
		@return ceil($number * $n) / $n;
	} @else if $mode == floor {
		@return floor($number * $n) / $n;
	} @else {
		@warn '#{ $mode } is undefined keyword.';
		@return $number;
	}
}

@function decimal-ceil ($number, $digits: 0) {
	@return decimal-round($number, $digits, ceil);
}

@function decimal-floor ($number, $digits: 0) {
	@return decimal-round($number, $digits, floor);
}



$baseFS: 16px;  // <-- Change this if needed

// Change the gutter values based on grid designs
$gutterBase: 2.5%;
$gutterNone: 0%;
$gutterMed: 5%;
$gutterLarge: 7%;


.gutter {
	$gutter: $gutterBase;

	@for $cols from 2 through 12 {
		$span: $cols;
		@while $span > 0 {
			@if ($span == $cols) {
				> .span_#{$span}_of_#{$cols} { width: 100%; }
			} @else {
				> .span_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor'); }
			}
			$span: $span - 1;
		}
	}

	> .col {
		margin-left: $gutter;
	}

	&.hasRows {
		.col {
			margin-top: $gutter;
		}

		&.row_of_2 .col:nth-child(-n+2) { margin-top: 0; }
		&.row_of_3 .col:nth-child(-n+3) { margin-top: 0; }
		&.row_of_4 .col:nth-child(-n+4) { margin-top: 0; }
		&.row_of_5 .col:nth-child(-n+5) { margin-top: 0; }
		&.row_of_6 .col:nth-child(-n+6) { margin-top: 0; }
	}
}

.gutter--none {
	$gutter: $gutterNone;

	@for $cols from 2 through 12 {
		$span: $cols;
		@while $span > 0 {
			@if ($span == $cols) {
				> .span_#{$span}_of_#{$cols} { width: 100%; }
			} @else {
				> .span_#{$span}_of_#{$cols} { width: decimal-round((100 * $span/$cols), 2, 'floor') * 1%; }
			}
			$span: $span - 1;
		}
	}

	> .col {
		margin-left: 0;
	}

	&.hasRows {
		.col {
			margin-top: $gutter;
		}
	}
}

.gutter--l {
	$gutter: $gutterLarge;

	@for $cols from 2 through 12 {
		$span: $cols;
		@while $span > 0 {
			@if ($span == $cols) {
				> .span_#{$span}_of_#{$cols} { width: 100%; }
			} @else {
				> .span_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor'); }
			}
			$span: $span - 1;
		}
	}

	> .col {
		margin-left: $gutter;
	}

	&.hasRows {
		.col {
			margin-top: $gutter;
		}

		&.row_of_2 .col:nth-child(-n+2) { margin-top: 0; }
		&.row_of_3 .col:nth-child(-n+3) { margin-top: 0; }
		&.row_of_4 .col:nth-child(-n+4) { margin-top: 0; }
		&.row_of_5 .col:nth-child(-n+5) { margin-top: 0; }
		&.row_of_6 .col:nth-child(-n+6) { margin-top: 0; }
	}
}

.gutter--m {
	$gutter: $gutterMed;

	@for $cols from 2 through 12 {
		$span: $cols;
		@while $span > 0 {
			@if ($span == $cols) {
				> .span_#{$span}_of_#{$cols} { width: 100%; }
			} @else {
				> .span_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor'); }
			}
			$span: $span - 1;
		}
	}

	> .col {
		margin-left: $gutter;
	}

	&.hasRows {
		.col {
			margin-top: $gutter;
		}

		&.row_of_2 .col:nth-child(-n+2) { margin-top: 0; }
		&.row_of_3 .col:nth-child(-n+3) { margin-top: 0; }
		&.row_of_4 .col:nth-child(-n+4) { margin-top: 0; }
		&.row_of_5 .col:nth-child(-n+5) { margin-top: 0; }
		&.row_of_6 .col:nth-child(-n+6) { margin-top: 0; }
	}
}



.grid-group {
	clear: both;
	margin: 0;
	zoom: 1;
	font-size: 0;
	zoom:1; /* For IE 6/7 */

	&:before,
	&:after { content:""; display:table; }
	&:after { clear:both;}

	&.row_of_2 .col:nth-child(2n+1) { margin-left: 0; }
	&.row_of_3 .col:nth-child(3n+1) { margin-left: 0; }
	&.row_of_4 .col:nth-child(4n+1) { margin-left: 0; }
	&.row_of_5 .col:nth-child(5n+1) { margin-left: 0; }
	&.row_of_6 .col:nth-child(6n+1) { margin-left: 0; }
}

.col {
	font-size: $baseFS;
	display: inline-block;
	vertical-align: top;
	margin: 0;

	&:first-child {
		margin-left: 0;
	}
}

.vAlign-mid {
	vertical-align: middle;
}
.vAlign-bot {
	vertical-align: bottom;
}



@media only screen and (max-width:900px) {
	//Here, we reset the variables based on breakpoint.
	//Change them here if you want gutter size to change based on tablet!
	$gutterBase: 2.5%;
	$gutterNone: 0%;
	$gutterMed: 7%;
	$gutterLarge: 10%;


	.grid-group {
		&.row_of_2 .col:nth-child(2n+1) { margin-left: 0; }
		&.row_of_3 .col:nth-child(3n+1) { margin-left: 0; }
		&.row_of_4 .col:nth-child(4n+1) { margin-left: 0; }
		&.row_of_5 .col:nth-child(5n+1) { margin-left: 0; }
		&.row_of_6 .col:nth-child(6n+1) { margin-left: 0; }
	}


	.gutter {
		$gutter: $gutterBase;

		&.row_of_2 .col { margin-left: $gutter; }
		&.row_of_3 .col { margin-left: $gutter; }
		&.row_of_4 .col { margin-left: $gutter; }
		&.row_of_5 .col { margin-left: $gutter; }
		&.row_of_6 .col { margin-left: $gutter; }

		@for $cols from 2 through 12 {
			$span: $cols;
			@while $span > 0 {
				@if ($span == $cols) {
					.span_#{$span}_of_#{$cols} { width: 100%; }
					.tablet_#{$span}_of_#{$cols} { width: 100% !important; }
				} @else {
					.span_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor'); }
					.tablet_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor') !important; }
				}
				$span: $span - 1;
			}
		}

		.col {
			margin-left: $gutter;

			&:first-child {
				margin-left: 0;
			}
		}

		&.hasRows {
			.col {
				margin-top: $gutter;
			}

			&.row_of_2 .col:nth-child(-n+2) { margin-top: 0; }
			&.row_of_3 .col:nth-child(-n+3) { margin-top: 0; }
			&.row_of_4 .col:nth-child(-n+4) { margin-top: 0; }
			&.row_of_5 .col:nth-child(-n+5) { margin-top: 0; }
			&.row_of_6 .col:nth-child(-n+6) { margin-top: 0; }
		}

		&.hasRows--tablet {
			.col {
				margin-top: $gutter;
			}

			&.hasRows {
				&.row_of_2 .col:nth-child(-n+2) { margin-top: $gutter; }
				&.row_of_3 .col:nth-child(-n+3) { margin-top: $gutter; }
				&.row_of_4 .col:nth-child(-n+4) { margin-top: $gutter; }
				&.row_of_5 .col:nth-child(-n+5) { margin-top: $gutter; }
				&.row_of_6 .col:nth-child(-n+6) { margin-top: $gutter; }
			}

			&.row_of_2--tablet .col:nth-child(-n+2) { margin-top: 0 !important; }
			&.row_of_3--tablet .col:nth-child(-n+3) { margin-top: 0 !important; }
			&.row_of_4--tablet .col:nth-child(-n+4) { margin-top: 0 !important; }
			&.row_of_5--tablet .col:nth-child(-n+5) { margin-top: 0 !important; }
			&.row_of_6--tablet .col:nth-child(-n+6) { margin-top: 0 !important; }
		}

		.tablet_full_span {
			width: 100%;
			margin-left: 0;
		}

		&.row_of_2 .col:nth-child(2n+1) { margin-left: 0; }
		&.row_of_3 .col:nth-child(3n+1) { margin-left: 0; }
		&.row_of_4 .col:nth-child(4n+1) { margin-left: 0; }
		&.row_of_5 .col:nth-child(5n+1) { margin-left: 0; }
		&.row_of_6 .col:nth-child(6n+1) { margin-left: 0; }

		&.row_of_2--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(2n+1) { margin-left: 0 !important; }
		}

		&.row_of_3--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(3n+1) { margin-left: 0 !important; }
		}

		&.row_of_4--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(4n+1) { margin-left: 0 !important; }
		}

		&.row_of_5--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(5n+1) { margin-left: 0 !important; }
		}

		&.row_of_6--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(6n+1) { margin-left: 0 !important; }
		}
	}


	.gutter--none {
		$gutter: $gutterNone;

		&.row_of_2 .col { margin-left: $gutter !important; }
		&.row_of_3 .col { margin-left: $gutter !important; }
		&.row_of_4 .col { margin-left: $gutter !important; }
		&.row_of_5 .col { margin-left: $gutter !important; }
		&.row_of_6 .col { margin-left: $gutter !important; }

		@for $cols from 2 through 12 {
			$span: $cols;
			@while $span > 0 {
				@if ($span == $cols) {
					.span_#{$span}_of_#{$cols} { width: 100%; }
					.tablet_#{$span}_of_#{$cols} { width: 100% !important; }
				} @else {
					.span_#{$span}_of_#{$cols} { width: decimal-round((100 * $span/$cols), 2, 'floor') * 1%; }
					.tablet_#{$span}_of_#{$cols} { width: decimal-round((100 * $span/$cols), 2, 'floor') * 1% !important; }
				}
				$span: $span - 1;
			}
		}

		.col {
			margin-left: $gutter;

			&:first-child {
				margin-left: 0;
			}
		}

		&.hasRows {
			.col {
				margin-top: $gutter;
			}
		}

		&.hasRows--tablet {
			.col {
				margin-top: $gutter;
			}
		}

		.tablet_full_span {
			width: 100%;
			margin-left: 0;
		}
	}


	.gutter--l {
		$gutter: $gutterLarge;

		&.row_of_2 .col { margin-left: $gutter; }
		&.row_of_3 .col { margin-left: $gutter; }
		&.row_of_4 .col { margin-left: $gutter; }
		&.row_of_5 .col { margin-left: $gutter; }
		&.row_of_6 .col { margin-left: $gutter; }

		@for $cols from 2 through 12 {
			$span: $cols;
			@while $span > 0 {
				@if ($span == $cols) {
					.span_#{$span}_of_#{$cols} { width: 100%; }
					.tablet_#{$span}_of_#{$cols} { width: 100% !important; }
				} @else {
					.span_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor'); }
					.tablet_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor') !important; }
				}
				$span: $span - 1;
			}
		}

		.col {
			margin-left: $gutter;

			&:first-child {
				margin-left: 0;
			}
		}

		&.hasRows {
			.col {
				margin-top: $gutter;
			}
		}

		&.hasRows--tablet {
			.col {
				margin-top: $gutter;
			}

			&.hasRows {
				&.row_of_2 .col:nth-child(-n+2) { margin-top: $gutter; }
				&.row_of_3 .col:nth-child(-n+3) { margin-top: $gutter; }
				&.row_of_4 .col:nth-child(-n+4) { margin-top: $gutter; }
				&.row_of_5 .col:nth-child(-n+5) { margin-top: $gutter; }
				&.row_of_6 .col:nth-child(-n+6) { margin-top: $gutter; }
			}

			&.row_of_2--tablet .col:nth-child(-n+2) { margin-top: 0 !important; }
			&.row_of_3--tablet .col:nth-child(-n+3) { margin-top: 0 !important; }
			&.row_of_4--tablet .col:nth-child(-n+4) { margin-top: 0 !important; }
			&.row_of_5--tablet .col:nth-child(-n+5) { margin-top: 0 !important; }
			&.row_of_6--tablet .col:nth-child(-n+6) { margin-top: 0 !important; }
		}

		.tablet_full_span {
			width: 100%;
			margin-left: 0;
		}

		&.row_of_2 .col:nth-child(2n+1) { margin-left: 0; }
		&.row_of_3 .col:nth-child(3n+1) { margin-left: 0; }
		&.row_of_4 .col:nth-child(4n+1) { margin-left: 0; }
		&.row_of_5 .col:nth-child(5n+1) { margin-left: 0; }
		&.row_of_6 .col:nth-child(6n+1) { margin-left: 0; }

		&.row_of_2--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(2n+1) { margin-left: 0 !important; }
		}

		&.row_of_3--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(3n+1) { margin-left: 0 !important; }
		}

		&.row_of_4--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(4n+1) { margin-left: 0 !important; }
		}

		&.row_of_5--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(5n+1) { margin-left: 0 !important; }
		}

		&.row_of_6--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(6n+1) { margin-left: 0 !important; }
		}
	}


	.gutter--m {
		$gutter: $gutterMed;

		&.row_of_2 .col { margin-left: $gutter; }
		&.row_of_3 .col { margin-left: $gutter; }
		&.row_of_4 .col { margin-left: $gutter; }
		&.row_of_5 .col { margin-left: $gutter; }
		&.row_of_6 .col { margin-left: $gutter; }

		@for $cols from 2 through 12 {
			$span: $cols;
			@while $span > 0 {
				@if ($span == $cols) {
					.span_#{$span}_of_#{$cols} { width: 100%; }
					.tablet_#{$span}_of_#{$cols} { width: 100% !important; }
				} @else {
					.span_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor'); }
					.tablet_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor') !important; }
				}
				$span: $span - 1;
			}
		}

		.col {
			margin-left: $gutter;

			&:first-child {
				margin-left: 0;
			}
		}

		&.hasRows {
			.col {
				margin-top: $gutter;
			}
		}

		&.hasRows--tablet {
			.col {
				margin-top: $gutter;
			}

			&.hasRows {
				&.row_of_2 .col:nth-child(-n+2) { margin-top: $gutter; }
				&.row_of_3 .col:nth-child(-n+3) { margin-top: $gutter; }
				&.row_of_4 .col:nth-child(-n+4) { margin-top: $gutter; }
				&.row_of_5 .col:nth-child(-n+5) { margin-top: $gutter; }
				&.row_of_6 .col:nth-child(-n+6) { margin-top: $gutter; }
			}

			&.row_of_2--tablet .col:nth-child(-n+2) { margin-top: 0 !important; }
			&.row_of_3--tablet .col:nth-child(-n+3) { margin-top: 0 !important; }
			&.row_of_4--tablet .col:nth-child(-n+4) { margin-top: 0 !important; }
			&.row_of_5--tablet .col:nth-child(-n+5) { margin-top: 0 !important; }
			&.row_of_6--tablet .col:nth-child(-n+6) { margin-top: 0 !important; }
		}

		.tablet_full_span {
			width: 100%;
			margin-left: 0;
		}

		&.row_of_2 .col:nth-child(2n+1) { margin-left: 0; }
		&.row_of_3 .col:nth-child(3n+1) { margin-left: 0; }
		&.row_of_4 .col:nth-child(4n+1) { margin-left: 0; }
		&.row_of_5 .col:nth-child(5n+1) { margin-left: 0; }
		&.row_of_6 .col:nth-child(6n+1) { margin-left: 0; }

		&.row_of_2--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(2n+1) { margin-left: 0 !important; }
		}

		&.row_of_3--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(3n+1) { margin-left: 0 !important; }
		}

		&.row_of_4--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(4n+1) { margin-left: 0 !important; }
		}

		&.row_of_5--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(5n+1) { margin-left: 0 !important; }
		}

		&.row_of_6--tablet {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(6n+1) { margin-left: 0 !important; }
		}
	}
}



// busted mobile

// @media only screen and (max-width:580px) {
// 	//Here, we reset the variables based on breakpoint.
// 	//Change them here if you want gutter size to change based on mobile!
// 	$gutterBase: 2.5%;
// 	$gutterNone: 0%;
// 	$gutterMed: 5%;
// 	$gutterLarge: 7%;


// 	// .grid-group {
// 	// 	&.row_of_2 .col:nth-child(2n+1) { margin-left: 0 !important; }
// 	// 	&.row_of_3 .col:nth-child(3n+1) { margin-left: 0 !important; }
// 	// 	&.row_of_4 .col:nth-child(4n+1) { margin-left: 0 !important; }
// 	// 	&.row_of_5 .col:nth-child(5n+1) { margin-left: 0 !important; }
// 	// 	&.row_of_6 .col:nth-child(6n+1) { margin-left: 0 !important; }
// 	// }


// 	.gutter {
// 		$gutter: $gutterBase;

// 		.col {
// 			width: 100%;
// 			margin-top: $gutter;

// 			&:first-child {
// 				margin-top: 0;
// 			}
// 		}

// 		&.row_of_2 .col { margin-left: 0; }
// 		&.row_of_3 .col { margin-left: 0; }
// 		&.row_of_4 .col { margin-left: 0; }
// 		&.row_of_5 .col { margin-left: 0; }
// 		&.row_of_6 .col { margin-left: 0; }

// 		// &.row_of_2--mobile .col { margin-left: $gutter !important; }
// 		// &.row_of_3--mobile .col { margin-left: $gutter !important; }
// 		// &.row_of_4--mobile .col { margin-left: $gutter !important; }
// 		// &.row_of_5--mobile .col { margin-left: $gutter !important; }
// 		// &.row_of_6--mobile .col { margin-left: $gutter !important; }

// 		@for $cols from 2 through 12 {
// 			$span: $cols;
// 			@while $span > 0 {
// 				@if ($span == $cols) {
// 					.span_#{$span}_of_#{$cols} { width: 100%; }
// 					.mobile_#{$span}_of_#{$cols} { width: 100% !important; }
// 				} @else {
// 					.span_#{$span}_of_#{$cols} { width: 100%; }
// 					.mobile_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor') !important; }
// 				}
// 				$span: $span - 1;
// 			}
// 		}

// 		.col {
// 			margin-left: 0;

// 			&:first-child {
// 				margin-left: 0;
// 			}
// 		}

// 		&.hasRows {
// 			.col {
// 				margin-top: $gutter;
// 			}

// 			&.row_of_2 .col:nth-child(-n+2),
// 			&.row_of_3 .col:nth-child(-n+3),
// 			&.row_of_4 .col:nth-child(-n+4),
// 			&.row_of_5 .col:nth-child(-n+5),
// 			&.row_of_6 .col:nth-child(-n+6) {
// 				margin-top: $gutter;

// 				&:first-child {
// 					margin-top: 0;
// 				}
// 			}
// 		}

// 		&.hasRows--mobile {
// 			.col {
// 				margin-top: $gutter;
// 			}

// 			&.hasRows {
// 				&.row_of_2 .col:nth-child(-n+2) { margin-top: $gutter; }
// 				&.row_of_3 .col:nth-child(-n+3) { margin-top: $gutter; }
// 				&.row_of_4 .col:nth-child(-n+4) { margin-top: $gutter; }
// 				&.row_of_5 .col:nth-child(-n+5) { margin-top: $gutter; }
// 				&.row_of_6 .col:nth-child(-n+6) { margin-top: $gutter; }
// 			}

// 			&.row_of_2--mobile .col:nth-child(-n+2) { margin-top: 0 !important; }
// 			&.row_of_3--mobile .col:nth-child(-n+3) { margin-top: 0 !important; }
// 			&.row_of_4--mobile .col:nth-child(-n+4) { margin-top: 0 !important; }
// 			&.row_of_5--mobile .col:nth-child(-n+5) { margin-top: 0 !important; }
// 			&.row_of_6--mobile .col:nth-child(-n+6) { margin-top: 0 !important; }
// 		}
// 	}

// 	.gutter--none {
// 		$gutter: $gutterNone;

// 		.col {width: 100%;}

// 		&.row_of_2 .col { margin-left: 0 !important; }
// 		&.row_of_3 .col { margin-left: 0 !important; }
// 		&.row_of_4 .col { margin-left: 0 !important; }
// 		&.row_of_5 .col { margin-left: 0 !important; }
// 		&.row_of_6 .col { margin-left: 0 !important; }

// 		&.row_of_2--mobile .col { margin-left: $gutter !important; }
// 		&.row_of_3--mobile .col { margin-left: $gutter !important; }
// 		&.row_of_4--mobile .col { margin-left: $gutter !important; }
// 		&.row_of_5--mobile .col { margin-left: $gutter !important; }
// 		&.row_of_6--mobile .col { margin-left: $gutter !important; }

// 		@for $cols from 2 through 12 {
// 			$span: $cols;
// 			@while $span > 0 {
// 				@if ($span == $cols) {
// 					.span_#{$span}_of_#{$cols} { width: 100%; }
// 					.mobile_#{$span}_of_#{$cols} { width: 100% !important; }
// 				} @else {
// 					.span_#{$span}_of_#{$cols} { width: 100%; }
// 					.mobile_#{$span}_of_#{$cols} { width: decimal-round((100 * $span/$cols), 2, 'floor') * 1% !important; }
// 				}
// 				$span: $span - 1;
// 			}
// 		}


// 		.col {
// 			margin-left: 0;

// 			&:first-child {
// 				margin-left: 0;
// 			}
// 		}

// 		&.hasRows {
// 			.col {
// 				margin-top: $gutter;
// 			}

// 			&.row_of_2 .col:nth-child(-n+2),
// 			&.row_of_3 .col:nth-child(-n+3),
// 			&.row_of_4 .col:nth-child(-n+4),
// 			&.row_of_5 .col:nth-child(-n+5),
// 			&.row_of_6 .col:nth-child(-n+6) {
// 				margin-top: $gutter;

// 				&:first-child {
// 					margin-top: 0;
// 				}
// 			}
// 		}

// 		&.hasRows--mobile {
// 			.col {
// 				margin-top: $gutter;
// 			}
// 		}
// 	}

// 	.gutter--l {
// 		$gutter: $gutterLarge;

// 		.col {width: 100%;}

// 		&.row_of_2 .col { margin-left: 0 !important; }
// 		&.row_of_3 .col { margin-left: 0 !important; }
// 		&.row_of_4 .col { margin-left: 0 !important; }
// 		&.row_of_5 .col { margin-left: 0 !important; }
// 		&.row_of_6 .col { margin-left: 0 !important; }

// 		&.row_of_2--mobile .col { margin-left: $gutter !important; }
// 		&.row_of_3--mobile .col { margin-left: $gutter !important; }
// 		&.row_of_4--mobile .col { margin-left: $gutter !important; }
// 		&.row_of_5--mobile .col { margin-left: $gutter !important; }
// 		&.row_of_6--mobile .col { margin-left: $gutter !important; }

// 		@for $cols from 2 through 12 {
// 			$span: $cols;
// 			@while $span > 0 {
// 				@if ($span == $cols) {
// 					.span_#{$span}_of_#{$cols} { width: 100%; }
// 					.mobile_#{$span}_of_#{$cols} { width: 100% !important; }
// 				} @else {
// 					.span_#{$span}_of_#{$cols} { width: 100%; }
// 					.mobile_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor') !important; }
// 				}
// 				$span: $span - 1;
// 			}
// 		}

// 		.col {
// 			margin-left: $gutter;

// 			&:first-child {
// 				margin-left: 0;
// 			}
// 		}

// 		&.hasRows {
// 			.col {
// 				margin-top: $gutter;
// 			}

// 			&.row_of_2 .col:nth-child(-n+2),
// 			&.row_of_3 .col:nth-child(-n+3),
// 			&.row_of_4 .col:nth-child(-n+4),
// 			&.row_of_5 .col:nth-child(-n+5),
// 			&.row_of_6 .col:nth-child(-n+6) {
// 				margin-top: $gutter;

// 				&:first-child {
// 					margin-top: 0;
// 				}
// 			}
// 		}

// 		&.hasRows--mobile {
// 			.col {
// 				margin-top: $gutter;
// 			}
// 		}
// 	}
// 	.gutter--m {
// 		$gutter: $gutterMed;

// 		.col {width: 100%;}

// 		&.row_of_2 .col { margin-left: 0 !important; }
// 		&.row_of_3 .col { margin-left: 0 !important; }
// 		&.row_of_4 .col { margin-left: 0 !important; }
// 		&.row_of_5 .col { margin-left: 0 !important; }
// 		&.row_of_6 .col { margin-left: 0 !important; }

// 		&.row_of_2--mobile .col { margin-left: $gutter !important; }
// 		&.row_of_3--mobile .col { margin-left: $gutter !important; }
// 		&.row_of_4--mobile .col { margin-left: $gutter !important; }
// 		&.row_of_5--mobile .col { margin-left: $gutter !important; }
// 		&.row_of_6--mobile .col { margin-left: $gutter !important; }

// 		@for $cols from 2 through 12 {
// 			$span: $cols;
// 			@while $span > 0 {
// 				@if ($span == $cols) {
// 					.span_#{$span}_of_#{$cols} { width: 100%; }
// 					.mobile_#{$span}_of_#{$cols} { width: 100% !important; }
// 				} @else {
// 					.span_#{$span}_of_#{$cols} { width: 100%; }
// 					.mobile_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor') !important; }
// 				}
// 				$span: $span - 1;
// 			}
// 		}

// 		.col {
// 			margin-left: $gutter;

// 			&:first-child {
// 				margin-left: 0;
// 			}
// 		}

// 		&.hasRows {
// 			.col {
// 				margin-top: $gutter;
// 			}

// 			&.row_of_2 .col:nth-child(-n+2),
// 			&.row_of_3 .col:nth-child(-n+3),
// 			&.row_of_4 .col:nth-child(-n+4),
// 			&.row_of_5 .col:nth-child(-n+5),
// 			&.row_of_6 .col:nth-child(-n+6) {
// 				margin-top: $gutter;

// 				&:first-child {
// 					margin-top: 0;
// 				}
// 			}
// 		}

// 		&.hasRows--mobile {
// 			.col {
// 				margin-top: $gutter;
// 			}
// 		}
// 	}
// }



@media only screen and (max-width:580px) {
	//Here, we reset the variables based on breakpoint.
	//Change them here if you want gutter size to change based on mobile!
	$gutterBase: 2.5%;
	$gutterNone: 0%;
	$gutterMed: 5%;
	$gutterLarge: 7%;

	.grid-group {
		&.row_of_2 .col:nth-child(2n+1) { margin-left: 0; }
		&.row_of_3 .col:nth-child(3n+1) { margin-left: 0; }
		&.row_of_4 .col:nth-child(4n+1) { margin-left: 0; }
		&.row_of_5 .col:nth-child(5n+1) { margin-left: 0; }
		&.row_of_6 .col:nth-child(6n+1) { margin-left: 0; }
	}


	.gutter {
		$gutter: $gutterBase;

		.col {
			width: 100% !important;
			margin-top: $gutter;
			margin-left: 0;

			&:first-child {
				margin-top: 0;
			}
		}

		&.row_of_2 .col { margin-left: 0; }
		&.row_of_3 .col { margin-left: 0; }
		&.row_of_4 .col { margin-left: 0; }
		&.row_of_5 .col { margin-left: 0; }
		&.row_of_6 .col { margin-left: 0; }

		@for $cols from 2 through 12 {
			$span: $cols;
			@while $span > 0 {
				@if ($span == $cols) {
					.span_#{$span}_of_#{$cols} { width: 100%; }
					.mobile_#{$span}_of_#{$cols} { width: 100% !important; }
				} @else {
					.span_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor'); }
					.mobile_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor') !important; }
				}
				$span: $span - 1;
			}
		}

		&.hasRows {
			.col {
				margin-top: $gutter;
			}

			&.row_of_2 .col:nth-child(-n+2) {
				margin-top: $gutter;

				&:first-child { margin-top: 0; }
			}
			&.row_of_3 .col:nth-child(-n+3) {
				margin-top: $gutter;

				&:first-child { margin-top: 0; }
			}
			&.row_of_4 .col:nth-child(-n+4) {
				margin-top: $gutter;

				&:first-child { margin-top: 0; }
			}
			&.row_of_5 .col:nth-child(-n+5) {
				margin-top: $gutter;

				&:first-child { margin-top: 0; }
			}
			&.row_of_6 .col:nth-child(-n+6) {
				margin-top: $gutter;

				&:first-child { margin-top: 0; }
			}
		}

		&.hasRows--mobile {
			.col {
				margin-top: $gutter;
			}

			&.hasRows {
				&.row_of_2 .col:nth-child(-n+2) { margin-top: $gutter; }
				&.row_of_3 .col:nth-child(-n+3) { margin-top: $gutter; }
				&.row_of_4 .col:nth-child(-n+4) { margin-top: $gutter; }
				&.row_of_5 .col:nth-child(-n+5) { margin-top: $gutter; }
				&.row_of_6 .col:nth-child(-n+6) { margin-top: $gutter; }
			}

			&.row_of_2--mobile .col:nth-child(-n+2) { margin-top: 0 !important; }
			&.row_of_3--mobile .col:nth-child(-n+3) { margin-top: 0 !important; }
			&.row_of_4--mobile .col:nth-child(-n+4) { margin-top: 0 !important; }
			&.row_of_5--mobile .col:nth-child(-n+5) { margin-top: 0 !important; }
			&.row_of_6--mobile .col:nth-child(-n+6) { margin-top: 0 !important; }
		}

		.mobile_full_span {
			width: 100%;
			margin-left: 0;
		}

		// &.row_of_2 .col:nth-child(2n+1) { margin-left: 0; }
		// &.row_of_3 .col:nth-child(3n+1) { margin-left: 0; }
		// &.row_of_4 .col:nth-child(4n+1) { margin-left: 0; }
		// &.row_of_5 .col:nth-child(5n+1) { margin-left: 0; }
		// &.row_of_6 .col:nth-child(6n+1) { margin-left: 0; }


		&.row_of_2--mobile {
			.col { margin-left: $gutter; }

			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(2n+1) { margin-left: 0 !important; }
		}

		&.row_of_3--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(3n+1) { margin-left: 0 !important; }
		}

		&.row_of_4--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(4n+1) { margin-left: 0 !important; }
		}

		&.row_of_5--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(5n+1) { margin-left: 0 !important; }
		}

		&.row_of_6--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(6n+1) { margin-left: 0 !important; }
		}
	}


	.gutter--none {
		$gutter: $gutterNone;

		&.row_of_2 .col { margin-left: $gutter !important; }
		&.row_of_3 .col { margin-left: $gutter !important; }
		&.row_of_4 .col { margin-left: $gutter !important; }
		&.row_of_5 .col { margin-left: $gutter !important; }
		&.row_of_6 .col { margin-left: $gutter !important; }

		@for $cols from 2 through 12 {
			$span: $cols;
			@while $span > 0 {
				@if ($span == $cols) {
					.span_#{$span}_of_#{$cols} { width: 100%; }
					.mobile_#{$span}_of_#{$cols} { width: 100% !important; }
				} @else {
					.span_#{$span}_of_#{$cols} { width: decimal-round((100 * $span/$cols), 2, 'floor') * 1%; }
					.mobile_#{$span}_of_#{$cols} { width: decimal-round((100 * $span/$cols), 2, 'floor') * 1% !important; }
				}
				$span: $span - 1;
			}
		}

		.col {
			margin-left: $gutter;

			&:first-child {
				margin-left: 0;
			}
		}

		&.hasRows {
			.col {
				margin-top: $gutter;
			}
		}

		&.hasRows--mobile {
			.col {
				margin-top: $gutter;
			}
		}

		.mobile_full_span {
			width: 100%;
			margin-left: 0;
		}
	}


	.gutter--l {
		$gutter: $gutterLarge;

		&.row_of_2 .col { margin-left: $gutter; }
		&.row_of_3 .col { margin-left: $gutter; }
		&.row_of_4 .col { margin-left: $gutter; }
		&.row_of_5 .col { margin-left: $gutter; }
		&.row_of_6 .col { margin-left: $gutter; }

		@for $cols from 2 through 12 {
			$span: $cols;
			@while $span > 0 {
				@if ($span == $cols) {
					.span_#{$span}_of_#{$cols} { width: 100%; }
					.mobile_#{$span}_of_#{$cols} { width: 100% !important; }
				} @else {
					.span_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor'); }
					.mobile_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor') !important; }
				}
				$span: $span - 1;
			}
		}

		.col {
			margin-left: $gutter;

			&:first-child {
				margin-left: 0;
			}
		}

		&.hasRows {
			.col {
				margin-top: $gutter;
			}
		}

		&.hasRows--mobile {
			.col {
				margin-top: $gutter;
			}

			&.hasRows {
				&.row_of_2 .col:nth-child(-n+2) { margin-top: $gutter; }
				&.row_of_3 .col:nth-child(-n+3) { margin-top: $gutter; }
				&.row_of_4 .col:nth-child(-n+4) { margin-top: $gutter; }
				&.row_of_5 .col:nth-child(-n+5) { margin-top: $gutter; }
				&.row_of_6 .col:nth-child(-n+6) { margin-top: $gutter; }
			}

			&.row_of_2--mobile .col:nth-child(-n+2) { margin-top: 0 !important; }
			&.row_of_3--mobile .col:nth-child(-n+3) { margin-top: 0 !important; }
			&.row_of_4--mobile .col:nth-child(-n+4) { margin-top: 0 !important; }
			&.row_of_5--mobile .col:nth-child(-n+5) { margin-top: 0 !important; }
			&.row_of_6--mobile .col:nth-child(-n+6) { margin-top: 0 !important; }
		}

		.mobile_full_span {
			width: 100%;
			margin-left: 0;
		}

		&.row_of_2 .col:nth-child(2n+1) { margin-left: 0; }
		&.row_of_3 .col:nth-child(3n+1) { margin-left: 0; }
		&.row_of_4 .col:nth-child(4n+1) { margin-left: 0; }
		&.row_of_5 .col:nth-child(5n+1) { margin-left: 0; }
		&.row_of_6 .col:nth-child(6n+1) { margin-left: 0; }

		&.row_of_2--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(2n+1) { margin-left: 0 !important; }
		}

		&.row_of_3--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(3n+1) { margin-left: 0 !important; }
		}

		&.row_of_4--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(4n+1) { margin-left: 0 !important; }
		}

		&.row_of_5--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(5n+1) { margin-left: 0 !important; }
		}

		&.row_of_6--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(6n+1) { margin-left: 0 !important; }
		}
	}


	.gutter--m {
		$gutter: $gutterMed;

		&.row_of_2 .col { margin-left: $gutter; }
		&.row_of_3 .col { margin-left: $gutter; }
		&.row_of_4 .col { margin-left: $gutter; }
		&.row_of_5 .col { margin-left: $gutter; }
		&.row_of_6 .col { margin-left: $gutter; }

		@for $cols from 2 through 12 {
			$span: $cols;
			@while $span > 0 {
				@if ($span == $cols) {
					.span_#{$span}_of_#{$cols} { width: 100%; }
					.mobile_#{$span}_of_#{$cols} { width: 100% !important; }
				} @else {
					.span_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor'); }
					.mobile_#{$span}_of_#{$cols} { width: decimal-round( (((100 - ($gutter * ($cols - 1))) / $cols) * $span) + (($span - 1) * $gutter) , 2, 'floor') !important; }
				}
				$span: $span - 1;
			}
		}

		.col {
			margin-left: $gutter;

			&:first-child {
				margin-left: 0;
			}
		}

		&.hasRows {
			.col {
				margin-top: $gutter;
			}
		}

		&.hasRows--mobile {
			.col {
				margin-top: $gutter;
			}

			&.hasRows {
				&.row_of_2 .col:nth-child(-n+2) { margin-top: $gutter; }
				&.row_of_3 .col:nth-child(-n+3) { margin-top: $gutter; }
				&.row_of_4 .col:nth-child(-n+4) { margin-top: $gutter; }
				&.row_of_5 .col:nth-child(-n+5) { margin-top: $gutter; }
				&.row_of_6 .col:nth-child(-n+6) { margin-top: $gutter; }
			}

			&.row_of_2--mobile .col:nth-child(-n+2) { margin-top: 0 !important; }
			&.row_of_3--mobile .col:nth-child(-n+3) { margin-top: 0 !important; }
			&.row_of_4--mobile .col:nth-child(-n+4) { margin-top: 0 !important; }
			&.row_of_5--mobile .col:nth-child(-n+5) { margin-top: 0 !important; }
			&.row_of_6--mobile .col:nth-child(-n+6) { margin-top: 0 !important; }
		}

		.mobile_full_span {
			width: 100%;
			margin-left: 0;
		}

		&.row_of_2 .col:nth-child(2n+1) { margin-left: 0; }
		&.row_of_3 .col:nth-child(3n+1) { margin-left: 0; }
		&.row_of_4 .col:nth-child(4n+1) { margin-left: 0; }
		&.row_of_5 .col:nth-child(5n+1) { margin-left: 0; }
		&.row_of_6 .col:nth-child(6n+1) { margin-left: 0; }

		&.row_of_2--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(2n+1) { margin-left: 0 !important; }
		}

		&.row_of_3--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(3n+1) { margin-left: 0 !important; }
		}

		&.row_of_4--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(4n+1) { margin-left: 0 !important; }
		}

		&.row_of_5--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(5n+1) { margin-left: 0 !important; }
		}

		&.row_of_6--mobile {
			&.row_of_2 .col:nth-child(2n+1) { margin-left: $gutter; }
			&.row_of_3 .col:nth-child(3n+1) { margin-left: $gutter; }
			&.row_of_4 .col:nth-child(4n+1) { margin-left: $gutter; }
			&.row_of_5 .col:nth-child(5n+1) { margin-left: $gutter; }
			&.row_of_6 .col:nth-child(6n+1) { margin-left: $gutter; }

			.col:nth-child(6n+1) { margin-left: 0 !important; }
		}
	}
}